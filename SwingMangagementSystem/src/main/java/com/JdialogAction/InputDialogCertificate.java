/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.JdialogAction;

import com.Dao.CertificateDao;

import com.model.ModelCertificate;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.text.DefaultFormatterFactory;

import javax.swing.text.NumberFormatter;

/**
 *
 * @author konod
 */
public class InputDialogCertificate extends javax.swing.JDialog {

    /**
     * Creates new form InputDialogCertificate
     */
    private CertificateDao certificateDao  ;
    private String StudentId = ""; 
    private ModelCertificate cef  ; 
    public InputDialogCertificate(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        certificateDao = new CertificateDao() ; 
        initComponents();
        init() ; 
    }
     public InputDialogCertificate(javax.swing.JDialog parent, boolean modal,String StudentId) {
        super(parent, modal);
        certificateDao = new CertificateDao() ; 
        this.StudentId = StudentId ; 
        initComponents();
        init() ; 
    }
     public InputDialogCertificate(javax.swing.JDialog parent, boolean modal, ModelCertificate cef) {
        super(parent, modal);
        certificateDao = new CertificateDao() ; 
        this.cef = cef  ; 
        initComponents();
        init() ; 
    }
     private void init() {
//       StudentIdLabel.setText("Student ID : "+ cef.getStudentID());
  NumberFormat floatFormat = new DecimalFormat("#.00"); // Adjust the pattern as needed

// Create a NumberFormatter with the specified format
NumberFormatter floatFormatter = new NumberFormatter(floatFormat);
floatFormatter.setValueClass(Float.class); // Set the value class to Float
floatFormatter.setAllowsInvalid(false); // Do not allow invalid entries

// Create the JFormattedTextField with the formatter

GradeFormateText.setFormatterFactory(new DefaultFormatterFactory(floatFormatter));
      if (cef != null) {
        StudentIdLabel.setText("Student ID : " + cef.getStudentID());
        CertificateName.setText(cef.getCertificateName());
        GradeFormateText.setText(String.valueOf(cef.getGrade()));

        CertificateStart.setDate(cef.getIssueDate());
        CertificateEnd.setDate(cef.getExpiryDate());
        
        }
      else 
      {
         StudentIdLabel.setText("Student ID : " + StudentId);
      }

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CertificateStart = new com.toedter.calendar.JDateChooser();
        CertificateEnd = new com.toedter.calendar.JDateChooser();
        AddCertificate = new javax.swing.JButton();
        GradeFormateText = new javax.swing.JFormattedTextField();
        CertificateName = new javax.swing.JTextField();
        StudentIdLabel = new javax.swing.JLabel();
        ErrorTextFlied = new javax.swing.JLabel();
        StudentIdLabel1 = new javax.swing.JLabel();
        StudentIdLabel2 = new javax.swing.JLabel();
        StudentIdLabel3 = new javax.swing.JLabel();
        StudentIdLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        CertificateStart.setMinSelectableDate(new java.util.Date(-62135791089000L));

        AddCertificate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddCertificate.setForeground(new java.awt.Color(0, 102, 102));
        AddCertificate.setText("SUBMIT");
        AddCertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCertificateActionPerformed(evt);
            }
        });

        GradeFormateText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        GradeFormateText.setPreferredSize(new java.awt.Dimension(88, 22));

        CertificateName.setPreferredSize(new java.awt.Dimension(88, 22));

        StudentIdLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        StudentIdLabel.setForeground(new java.awt.Color(0, 204, 204));
        StudentIdLabel.setText("Student ID :");

        ErrorTextFlied.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ErrorTextFlied.setForeground(new java.awt.Color(255, 51, 51));

        StudentIdLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        StudentIdLabel1.setForeground(new java.awt.Color(0, 204, 204));
        StudentIdLabel1.setText("Expired Date :");

        StudentIdLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        StudentIdLabel2.setForeground(new java.awt.Color(0, 204, 204));
        StudentIdLabel2.setText("Start Date :");

        StudentIdLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        StudentIdLabel3.setForeground(new java.awt.Color(0, 204, 204));
        StudentIdLabel3.setText("Certificate Name :");

        StudentIdLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        StudentIdLabel4.setForeground(new java.awt.Color(0, 204, 204));
        StudentIdLabel4.setText("Grade :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(AddCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(StudentIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(ErrorTextFlied, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CertificateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(CertificateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CertificateName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StudentIdLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StudentIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GradeFormateText, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StudentIdLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(StudentIdLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(StudentIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentIdLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentIdLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CertificateName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GradeFormateText, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentIdLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CertificateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CertificateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(ErrorTextFlied, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddCertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCertificateActionPerformed
//        SimpleDateFormat mysqlDateTimeFormat = new SimpleDateFormat("yyyy-MM-dd");
//        String formattedDateTime = mysqlDateTimeFormat.format(CertificateStart.getDate());
//        System.out.println(formattedDateTime);
//                System.out.println(GradeFormateText.getText());
  // Get values from UI components
// Get values from UI components

    String certificateName = CertificateName.getText();
    Date startDate = CertificateStart.getDate();
    Date endDate = CertificateEnd.getDate();

    // Validate grade format text
    float grade;
    try {
        grade = Float.parseFloat(GradeFormateText.getText());
    } catch (NumberFormatException e) {
        // Display an error message or handle the case where the grade format is invalid
        ErrorTextFlied.setText("Invalid grade format.");
        return;
    }

    // Validate inputs
    if (certificateName.isEmpty() || startDate == null || endDate == null) {
        // Display an error message or handle the case where input is missing
        ErrorTextFlied.setText("Please fill in all fields.");
        return;
    }

    // Validate date range
    if (startDate.after(endDate)) {
        // Display an error message or handle the case where the start date is after the end date
        ErrorTextFlied.setText("Start date cannot be later than expiry date.");
        return;
    }
    SimpleDateFormat mysqlDateTimeFormat = new SimpleDateFormat("yyyy-MM-dd");
    // Check if it's an update or add new certificate
    if (cef != null) {
       
        // Update existing certificate
        certificateDao.updateCertificate(cef.getCertificateID(), cef.getStudentID(), certificateName,  mysqlDateTimeFormat.format(startDate), mysqlDateTimeFormat.format(endDate), grade);
     
    } else {
         certificateDao.addCertificate( StudentId, certificateName,  mysqlDateTimeFormat.format(startDate), mysqlDateTimeFormat.format(endDate), grade);
    }
    this.dispose();
    }//GEN-LAST:event_AddCertificateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputDialogCertificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputDialogCertificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputDialogCertificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputDialogCertificate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  
        /* Create and display the dialog */
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCertificate;
    private com.toedter.calendar.JDateChooser CertificateEnd;
    private javax.swing.JTextField CertificateName;
    private com.toedter.calendar.JDateChooser CertificateStart;
    private javax.swing.JLabel ErrorTextFlied;
    private javax.swing.JFormattedTextField GradeFormateText;
    private javax.swing.JLabel StudentIdLabel;
    private javax.swing.JLabel StudentIdLabel1;
    private javax.swing.JLabel StudentIdLabel2;
    private javax.swing.JLabel StudentIdLabel3;
    private javax.swing.JLabel StudentIdLabel4;
    // End of variables declaration//GEN-END:variables

   
}
